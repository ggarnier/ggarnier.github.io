---
layout: post
comments: true
title: "Desenvolvedores e plataformas poliglotas"
date: 2009-09-11
categories: [linguagens de programação, engenharia de software]
---
Há alguns anos, era muito comum encontrarmos desenvolvedores que conheciam somente uma linguagem, e por isso intitulavam-se "desenvolvedor Java", "desenvolvedor Delphi", "desenvolvedor ASP", ou qualquer outra linguagem. Eram pessoas que conheciam uma, e somente uma, linguagem de programação, e a defendiam com unhas e dentes em qualquer discussão nos fóruns, frequentemente gerando [flame wars](http://en.wikipedia.org/wiki/Flame_war).

Esse tipo de desenvolvedor ainda existe, mas é cada vez menos comum, e isto é muito positivo. O livro [The Pragmatic Programmer](http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1232182674&amp;sr=8-1) recomenda que aprendamos uma linguagem nova por ano, e, com isso, muitos daqueles desenvolvedores Java ou C# estão aprendendo Ruby, Python ou Erlang. Mesmo que não tenhamos pretensão de trabalhar com estas linguagens, pelo menos a curto ou médio prazo, cada linguagem tem suas particularidades, ajudando a quebrar paradigmas. Quando conhecemos somente uma linguagem, temos uma grande tendência a resolver os problemas sempre da mesma forma, conforme aprendemos e como é feito tradicionalmente com aquela linguagem. Desta forma, a tendência é a estagnação, pois não procuramos outras maneiras de resolver os problemas. A partir do momento em que começamos a estudar outras linguagens, abrimos nossa cabeça e começamos a ["pensar fora da caixa"](http://en.wikipedia.org/wiki/Thinking_outside_the_box), e percebemos que existem muitas outras maneiras de resolver aquele mesmo problema, muitas delas mais simples e adequadas à situação. Surgem os desenvolvedores poliglotas.

Na época dos desenvolvedores monoglotas (sim, essa palavra existe!) era muito comum vermos discussões do tipo: "que linguagem é melhor, X ou Y?". A melhor resposta é: depende! Depende da situação, do projeto, da experiência da equipe... Para cada situação, uma linguagem pode ser mais adequada que outra, o que traz uma grande vantagem para os poliglotas, pois, para se tomar esta decisão, é necessário conhecer as linguagens disponíveis. Ao mesmo tempo, se ninguém na equipe tiver experiência com determinada linguagem, seria um grande risco utilizá-la no projeto. É como uma caixa de ferramentas: se eu tiver somente um martelo na minha caixa, como farei para apertar um parafuso? É importante termos o maior número possível de ferramentas disponíveis, e conhecimento sobre cada uma delas, para que possamos escolher a mais adequada em cada situação.

Acompanhando esse comportamento, há atualmente uma forte tendência a plataformas poliglotas, o que também é muito positivo. As plataformas existentes já estão bastante maduras, têm algoritmos eficientes para gerenciamento de memória e [Garbage Collection](http://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29), por exemplo, e são bem conhecidas. Encontram-se nesta categoria as plataformas Java e .NET, que estão continuamente aumentando o número de linguagens suportadas - veja a [lista de linguagens suportadas pela JVM](http://en.wikipedia.org/wiki/List_of_JVM_languages) e [pelo .NET](http://en.wikipedia.org/wiki/Microsoft_.NET_Languages). Com isso, a escolha da linguagem para cada projeto fica muito mais fácil, permitindo, inclusive, [projetos poliglotas](http://memeagora.blogspot.com/2006/12/polyglot-programming.html). Se você trabalha com Java e decide utilizar Ruby no seu projeto, por exemplo, basta adicionar o jar do [JRuby](http://www.jruby.org/).

A conclusão que podemos tirar disso é que um desenvolvedor nunca deve estagnar. Procure sempre estudar e aprender novas coisas, mesmo que não seja nada relacionado com o que você está trabalhando atualmente, pois, mesmo que não venha a trabalhar, isso ajuda a quebrar paradigmas e permite que você se torne um [melhor desenvolvedor](http://www.techfounder.net/2009/07/22/what-makes-a-good-programmer/).
